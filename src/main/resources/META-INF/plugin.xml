<idea-plugin>
  <name>CodeNarc</name>
  <vendor url="http://github.com/melix/codenarc-idea">Vladimir Orany, originally CÃ©dric Champeau and Daniel Demus</vendor>
  <depends>com.intellij.modules.java</depends>
  <depends>org.intellij.groovy</depends>
  <extensions defaultExtensionNs="com.intellij">
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.size.AbcMetricInspectionTool" shortName="CodeNarc.AbcMetric" displayName="Abc metric" groupPath="CodeNarc,Size" groupKey="Size" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.size.ClassSizeInspectionTool" shortName="CodeNarc.ClassSize" displayName="Class size" groupPath="CodeNarc,Size" groupKey="Size" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.size.CrapMetricInspectionTool" shortName="CodeNarc.CrapMetric" displayName="Crap metric" groupPath="CodeNarc,Size" groupKey="Size" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.size.CyclomaticComplexityInspectionTool" shortName="CodeNarc.CyclomaticComplexity" displayName="Cyclomatic complexity" groupPath="CodeNarc,Size" groupKey="Size" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.size.MethodCountInspectionTool" shortName="CodeNarc.MethodCount" displayName="Method count" groupPath="CodeNarc,Size" groupKey="Size" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.size.MethodSizeInspectionTool" shortName="CodeNarc.MethodSize" displayName="Method size" groupPath="CodeNarc,Size" groupKey="Size" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.size.NestedBlockDepthInspectionTool" shortName="CodeNarc.NestedBlockDepth" displayName="Nested block depth" groupPath="CodeNarc,Size" groupKey="Size" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.size.ParameterCountInspectionTool" shortName="CodeNarc.ParameterCount" displayName="Parameter count" groupPath="CodeNarc,Size" groupKey="Size" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.design.AbstractClassWithoutAbstractMethodInspectionTool" shortName="CodeNarc.AbstractClassWithoutAbstractMethod" displayName="Abstract class without abstract method" groupPath="CodeNarc,Design" groupKey="Design" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.design.AbstractClassWithPublicConstructorInspectionTool" shortName="CodeNarc.AbstractClassWithPublicConstructor" displayName="Abstract class with public constructor" groupPath="CodeNarc,Design" groupKey="Design" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.design.AssignmentToStaticFieldFromInstanceMethodInspectionTool" shortName="CodeNarc.AssignmentToStaticFieldFromInstanceMethod" displayName="Assignment to static field from instance method" groupPath="CodeNarc,Design" groupKey="Design" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.design.BooleanMethodReturnsNullInspectionTool" shortName="CodeNarc.BooleanMethodReturnsNull" displayName="Boolean method returns null" groupPath="CodeNarc,Design" groupKey="Design" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.design.BuilderMethodWithSideEffectsInspectionTool" shortName="CodeNarc.BuilderMethodWithSideEffects" displayName="Builder method with side effects" groupPath="CodeNarc,Design" groupKey="Design" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.design.CloneableWithoutCloneInspectionTool" shortName="CodeNarc.CloneableWithoutClone" displayName="Cloneable without clone" groupPath="CodeNarc,Design" groupKey="Design" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.design.CloseWithoutCloseableInspectionTool" shortName="CodeNarc.CloseWithoutCloseable" displayName="Close without closeable" groupPath="CodeNarc,Design" groupKey="Design" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.design.CompareToWithoutComparableInspectionTool" shortName="CodeNarc.CompareToWithoutComparable" displayName="Compare to without comparable" groupPath="CodeNarc,Design" groupKey="Design" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.design.ConstantsOnlyInterfaceInspectionTool" shortName="CodeNarc.ConstantsOnlyInterface" displayName="Constants only interface" groupPath="CodeNarc,Design" groupKey="Design" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.design.EmptyMethodInAbstractClassInspectionTool" shortName="CodeNarc.EmptyMethodInAbstractClass" displayName="Empty method in abstract class" groupPath="CodeNarc,Design" groupKey="Design" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.design.FinalClassWithProtectedMemberInspectionTool" shortName="CodeNarc.FinalClassWithProtectedMember" displayName="Final class with protected member" groupPath="CodeNarc,Design" groupKey="Design" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.design.ImplementationAsTypeInspectionTool" shortName="CodeNarc.ImplementationAsType" displayName="Implementation as type" groupPath="CodeNarc,Design" groupKey="Design" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.design.InstanceofInspectionTool" shortName="CodeNarc.Instanceof" displayName="Instanceof" groupPath="CodeNarc,Design" groupKey="Design" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.design.LocaleSetDefaultInspectionTool" shortName="CodeNarc.LocaleSetDefault" displayName="Locale set default" groupPath="CodeNarc,Design" groupKey="Design" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.design.NestedForLoopInspectionTool" shortName="CodeNarc.NestedForLoop" displayName="Nested for loop" groupPath="CodeNarc,Design" groupKey="Design" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.design.OptionalCollectionReturnTypeInspectionTool" shortName="CodeNarc.OptionalCollectionReturnType" displayName="Optional collection return type" groupPath="CodeNarc,Design" groupKey="Design" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.design.OptionalFieldInspectionTool" shortName="CodeNarc.OptionalField" displayName="Optional field" groupPath="CodeNarc,Design" groupKey="Design" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.design.OptionalMethodParameterInspectionTool" shortName="CodeNarc.OptionalMethodParameter" displayName="Optional method parameter" groupPath="CodeNarc,Design" groupKey="Design" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.design.PublicInstanceFieldInspectionTool" shortName="CodeNarc.PublicInstanceField" displayName="Public instance field" groupPath="CodeNarc,Design" groupKey="Design" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.design.PrivateFieldCouldBeFinalInspectionTool" shortName="CodeNarc.PrivateFieldCouldBeFinal" displayName="Private field could be final" groupPath="CodeNarc,Design" groupKey="Design" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.design.ReturnsNullInsteadOfEmptyArrayInspectionTool" shortName="CodeNarc.ReturnsNullInsteadOfEmptyArray" displayName="Returns null instead of empty array" groupPath="CodeNarc,Design" groupKey="Design" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.design.ReturnsNullInsteadOfEmptyCollectionInspectionTool" shortName="CodeNarc.ReturnsNullInsteadOfEmptyCollection" displayName="Returns null instead of empty collection" groupPath="CodeNarc,Design" groupKey="Design" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.design.SimpleDateFormatMissingLocaleInspectionTool" shortName="CodeNarc.SimpleDateFormatMissingLocale" displayName="Simple date format missing locale" groupPath="CodeNarc,Design" groupKey="Design" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.design.StatelessSingletonInspectionTool" shortName="CodeNarc.StatelessSingleton" displayName="Stateless singleton" groupPath="CodeNarc,Design" groupKey="Design" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.design.ToStringReturnsNullInspectionTool" shortName="CodeNarc.ToStringReturnsNull" displayName="To string returns null" groupPath="CodeNarc,Design" groupKey="Design" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.junit.ChainedTestInspectionTool" shortName="CodeNarc.ChainedTest" displayName="Chained test" groupPath="CodeNarc,Junit" groupKey="Junit" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.junit.CoupledTestCaseInspectionTool" shortName="CodeNarc.CoupledTestCase" displayName="Coupled test case" groupPath="CodeNarc,Junit" groupKey="Junit" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.junit.JUnitAssertAlwaysFailsInspectionTool" shortName="CodeNarc.JUnitAssertAlwaysFails" displayName="JUnit assert always fails" groupPath="CodeNarc,Junit" groupKey="Junit" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.junit.JUnitAssertAlwaysSucceedsInspectionTool" shortName="CodeNarc.JUnitAssertAlwaysSucceeds" displayName="JUnit assert always succeeds" groupPath="CodeNarc,Junit" groupKey="Junit" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.junit.JUnitFailWithoutMessageInspectionTool" shortName="CodeNarc.JUnitFailWithoutMessage" displayName="JUnit fail without message" groupPath="CodeNarc,Junit" groupKey="Junit" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.junit.JUnitPublicNonTestMethodInspectionTool" shortName="CodeNarc.JUnitPublicNonTestMethod" displayName="JUnit public non test method" groupPath="CodeNarc,Junit" groupKey="Junit" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.junit.JUnitPublicPropertyInspectionTool" shortName="CodeNarc.JUnitPublicProperty" displayName="JUnit public property" groupPath="CodeNarc,Junit" groupKey="Junit" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.junit.JUnitLostTestInspectionTool" shortName="CodeNarc.JUnitLostTest" displayName="JUnit lost test" groupPath="CodeNarc,Junit" groupKey="Junit" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.junit.JUnitPublicFieldInspectionTool" shortName="CodeNarc.JUnitPublicField" displayName="JUnit public field" groupPath="CodeNarc,Junit" groupKey="Junit" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.junit.JUnitSetUpCallsSuperInspectionTool" shortName="CodeNarc.JUnitSetUpCallsSuper" displayName="JUnit set up calls super" groupPath="CodeNarc,Junit" groupKey="Junit" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.junit.JUnitTearDownCallsSuperInspectionTool" shortName="CodeNarc.JUnitTearDownCallsSuper" displayName="JUnit tear down calls super" groupPath="CodeNarc,Junit" groupKey="Junit" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.junit.JUnitStyleAssertionsInspectionTool" shortName="CodeNarc.JUnitStyleAssertions" displayName="JUnit style assertions" groupPath="CodeNarc,Junit" groupKey="Junit" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.junit.JUnitTestMethodWithoutAssertInspectionTool" shortName="CodeNarc.JUnitTestMethodWithoutAssert" displayName="JUnit test method without assert" groupPath="CodeNarc,Junit" groupKey="Junit" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.junit.JUnitUnnecessarySetUpInspectionTool" shortName="CodeNarc.JUnitUnnecessarySetUp" displayName="JUnit unnecessary set up" groupPath="CodeNarc,Junit" groupKey="Junit" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.junit.JUnitUnnecessaryTearDownInspectionTool" shortName="CodeNarc.JUnitUnnecessaryTearDown" displayName="JUnit unnecessary tear down" groupPath="CodeNarc,Junit" groupKey="Junit" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.junit.JUnitUnnecessaryThrowsExceptionInspectionTool" shortName="CodeNarc.JUnitUnnecessaryThrowsException" displayName="JUnit unnecessary throws exception" groupPath="CodeNarc,Junit" groupKey="Junit" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.junit.SpockIgnoreRestUsedInspectionTool" shortName="CodeNarc.SpockIgnoreRestUsed" displayName="Spock ignore rest used" groupPath="CodeNarc,Junit" groupKey="Junit" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.junit.UnnecessaryFailInspectionTool" shortName="CodeNarc.UnnecessaryFail" displayName="Unnecessary fail" groupPath="CodeNarc,Junit" groupKey="Junit" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.junit.UseAssertTrueInsteadOfNegationInspectionTool" shortName="CodeNarc.UseAssertTrueInsteadOfNegation" displayName="Use assert true instead of negation" groupPath="CodeNarc,Junit" groupKey="Junit" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.junit.UseAssertFalseInsteadOfNegationInspectionTool" shortName="CodeNarc.UseAssertFalseInsteadOfNegation" displayName="Use assert false instead of negation" groupPath="CodeNarc,Junit" groupKey="Junit" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.junit.UseAssertEqualsInsteadOfAssertTrueInspectionTool" shortName="CodeNarc.UseAssertEqualsInsteadOfAssertTrue" displayName="Use assert equals instead of assert true" groupPath="CodeNarc,Junit" groupKey="Junit" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.junit.UseAssertTrueInsteadOfAssertEqualsInspectionTool" shortName="CodeNarc.UseAssertTrueInsteadOfAssertEquals" displayName="Use assert true instead of assert equals" groupPath="CodeNarc,Junit" groupKey="Junit" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.junit.UseAssertNullInsteadOfAssertEqualsInspectionTool" shortName="CodeNarc.UseAssertNullInsteadOfAssertEquals" displayName="Use assert null instead of assert equals" groupPath="CodeNarc,Junit" groupKey="Junit" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.junit.UseAssertSameInsteadOfAssertTrueInspectionTool" shortName="CodeNarc.UseAssertSameInsteadOfAssertTrue" displayName="Use assert same instead of assert true" groupPath="CodeNarc,Junit" groupKey="Junit" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.dry.DuplicateNumberLiteralInspectionTool" shortName="CodeNarc.DuplicateNumberLiteral" displayName="Duplicate number literal" groupPath="CodeNarc,Dry" groupKey="Dry" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.dry.DuplicateListLiteralInspectionTool" shortName="CodeNarc.DuplicateListLiteral" displayName="Duplicate list literal" groupPath="CodeNarc,Dry" groupKey="Dry" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.dry.DuplicateMapLiteralInspectionTool" shortName="CodeNarc.DuplicateMapLiteral" displayName="Duplicate map literal" groupPath="CodeNarc,Dry" groupKey="Dry" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.dry.DuplicateStringLiteralInspectionTool" shortName="CodeNarc.DuplicateStringLiteral" displayName="Duplicate string literal" groupPath="CodeNarc,Dry" groupKey="Dry" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.convention.CompileStaticInspectionTool" shortName="CodeNarc.CompileStatic" displayName="Compile static" groupPath="CodeNarc,Convention" groupKey="Convention" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.convention.ConfusingTernaryInspectionTool" shortName="CodeNarc.ConfusingTernary" displayName="Confusing ternary" groupPath="CodeNarc,Convention" groupKey="Convention" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.convention.CouldBeElvisInspectionTool" shortName="CodeNarc.CouldBeElvis" displayName="Could be elvis" groupPath="CodeNarc,Convention" groupKey="Convention" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.convention.CouldBeSwitchStatementInspectionTool" shortName="CodeNarc.CouldBeSwitchStatement" displayName="Could be switch statement" groupPath="CodeNarc,Convention" groupKey="Convention" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.convention.HashtableIsObsoleteInspectionTool" shortName="CodeNarc.HashtableIsObsolete" displayName="Hashtable is obsolete" groupPath="CodeNarc,Convention" groupKey="Convention" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.convention.FieldTypeRequiredInspectionTool" shortName="CodeNarc.FieldTypeRequired" displayName="Field type required" groupPath="CodeNarc,Convention" groupKey="Convention" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.convention.IfStatementCouldBeTernaryInspectionTool" shortName="CodeNarc.IfStatementCouldBeTernary" displayName="If statement could be ternary" groupPath="CodeNarc,Convention" groupKey="Convention" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.convention.ImplicitClosureParameterInspectionTool" shortName="CodeNarc.ImplicitClosureParameter" displayName="Implicit closure parameter" groupPath="CodeNarc,Convention" groupKey="Convention" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.convention.ImplicitReturnStatementInspectionTool" shortName="CodeNarc.ImplicitReturnStatement" displayName="Implicit return statement" groupPath="CodeNarc,Convention" groupKey="Convention" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.convention.InvertedIfElseInspectionTool" shortName="CodeNarc.InvertedIfElse" displayName="Inverted if else" groupPath="CodeNarc,Convention" groupKey="Convention" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.convention.InvertedConditionInspectionTool" shortName="CodeNarc.InvertedCondition" displayName="Inverted condition" groupPath="CodeNarc,Convention" groupKey="Convention" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.convention.LongLiteralWithLowerCaseLInspectionTool" shortName="CodeNarc.LongLiteralWithLowerCaseL" displayName="Long literal with lower caseL" groupPath="CodeNarc,Convention" groupKey="Convention" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.convention.MethodParameterTypeRequInspectionTool" shortName="CodeNarc.MethodParameterTypeRequired" displayName="Method parameter type required" groupPath="CodeNarc,Convention" groupKey="Convention" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.convention.MethodReturnTypeRequiredInspectionTool" shortName="CodeNarc.MethodReturnTypeRequired" displayName="Method return type required" groupPath="CodeNarc,Convention" groupKey="Convention" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.convention.NoDefInspectionTool" shortName="CodeNarc.NoDef" displayName="No def" groupPath="CodeNarc,Convention" groupKey="Convention" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.convention.NoDoubleInspectionTool" shortName="CodeNarc.NoDouble" displayName="No double" groupPath="CodeNarc,Convention" groupKey="Convention" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.convention.NoFloatInspectionTool" shortName="CodeNarc.NoFloat" displayName="No float" groupPath="CodeNarc,Convention" groupKey="Convention" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.convention.NoJavaUtilDateInspectionTool" shortName="CodeNarc.NoJavaUtilDate" displayName="No java util date" groupPath="CodeNarc,Convention" groupKey="Convention" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.convention.NoTabCharacterInspectionTool" shortName="CodeNarc.NoTabCharacter" displayName="No tab character" groupPath="CodeNarc,Convention" groupKey="Convention" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.convention.ParameterReassignmentInspectionTool" shortName="CodeNarc.ParameterReassignment" displayName="Parameter reassignment" groupPath="CodeNarc,Convention" groupKey="Convention" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.convention.PublicMethodsBeforeNonPublicMethodsInspectionTool" shortName="CodeNarc.PublicMethodsBeforeNonPublicMethods" displayName="Public methods before non public methods" groupPath="CodeNarc,Convention" groupKey="Convention" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.convention.StaticFieldsBeforeInstanceFieldsInspectionTool" shortName="CodeNarc.StaticFieldsBeforeInstanceFields" displayName="Static fields before instance fields" groupPath="CodeNarc,Convention" groupKey="Convention" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.convention.StaticMethodsBeforeInstanceMethodsInspectionTool" shortName="CodeNarc.StaticMethodsBeforeInstanceMethods" displayName="Static methods before instance methods" groupPath="CodeNarc,Convention" groupKey="Convention" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.convention.TernaryCouldBeElvisInspectionTool" shortName="CodeNarc.TernaryCouldBeElvis" displayName="Ternary could be elvis" groupPath="CodeNarc,Convention" groupKey="Convention" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.convention.TrailingCommaInspectionTool" shortName="CodeNarc.TrailingComma" displayName="Trailing comma" groupPath="CodeNarc,Convention" groupKey="Convention" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.convention.VariableTypeRequiredInspectionTool" shortName="CodeNarc.VariableTypeRequired" displayName="Variable type required" groupPath="CodeNarc,Convention" groupKey="Convention" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.convention.VectorIsObsoleteInspectionTool" shortName="CodeNarc.VectorIsObsolete" displayName="Vector is obsolete" groupPath="CodeNarc,Convention" groupKey="Convention" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.imports.DuplicateImportInspectionTool" shortName="CodeNarc.DuplicateImport" displayName="Duplicate import" groupPath="CodeNarc,Imports" groupKey="Imports" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.imports.ImportFromSamePackageInspectionTool" shortName="CodeNarc.ImportFromSamePackage" displayName="Import from same package" groupPath="CodeNarc,Imports" groupKey="Imports" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.imports.UnnecessaryGroovyImportInspectionTool" shortName="CodeNarc.UnnecessaryGroovyImport" displayName="Unnecessary groovy import" groupPath="CodeNarc,Imports" groupKey="Imports" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.imports.UnusedImportInspectionTool" shortName="CodeNarc.UnusedImport" displayName="Unused import" groupPath="CodeNarc,Imports" groupKey="Imports" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.imports.ImportFromSunPackagesInspectionTool" shortName="CodeNarc.ImportFromSunPackages" displayName="Import from sun packages" groupPath="CodeNarc,Imports" groupKey="Imports" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.imports.MisorderedStaticImportsInspectionTool" shortName="CodeNarc.MisorderedStaticImports" displayName="Misordered static imports" groupPath="CodeNarc,Imports" groupKey="Imports" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.imports.NoWildcardImportsInspectionTool" shortName="CodeNarc.NoWildcardImports" displayName="No wildcard imports" groupPath="CodeNarc,Imports" groupKey="Imports" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.logging.LoggerForDifferentClassInspectionTool" shortName="CodeNarc.LoggerForDifferentClass" displayName="Logger for different class" groupPath="CodeNarc,Logging" groupKey="Logging" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.logging.PrintlnInspectionTool" shortName="CodeNarc.Println" displayName="Println" groupPath="CodeNarc,Logging" groupKey="Logging" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.logging.PrintStackTraceInspectionTool" shortName="CodeNarc.PrintStackTrace" displayName="Print stack trace" groupPath="CodeNarc,Logging" groupKey="Logging" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.logging.SystemErrPrintInspectionTool" shortName="CodeNarc.SystemErrPrint" displayName="System err print" groupPath="CodeNarc,Logging" groupKey="Logging" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.logging.SystemOutPrintInspectionTool" shortName="CodeNarc.SystemOutPrint" displayName="System out print" groupPath="CodeNarc,Logging" groupKey="Logging" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.logging.LoggerWithWrongModifiersInspectionTool" shortName="CodeNarc.LoggerWithWrongModifiers" displayName="Logger with wrong modifiers" groupPath="CodeNarc,Logging" groupKey="Logging" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.logging.MultipleLoggersInspectionTool" shortName="CodeNarc.MultipleLoggers" displayName="Multiple loggers" groupPath="CodeNarc,Logging" groupKey="Logging" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.logging.LoggingSwallowsStacktraceInspectionTool" shortName="CodeNarc.LoggingSwallowsStacktrace" displayName="Logging swallows stacktrace" groupPath="CodeNarc,Logging" groupKey="Logging" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.naming.AbstractClassNameInspectionTool" shortName="CodeNarc.AbstractClassName" displayName="Abstract class name" groupPath="CodeNarc,Naming" groupKey="Naming" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.naming.ClassNameInspectionTool" shortName="CodeNarc.ClassName" displayName="Class name" groupPath="CodeNarc,Naming" groupKey="Naming" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.naming.ClassNameSameAsFilenameInspectionTool" shortName="CodeNarc.ClassNameSameAsFilename" displayName="Class name same as filename" groupPath="CodeNarc,Naming" groupKey="Naming" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.naming.ClassNameSameAsSuperclassInspectionTool" shortName="CodeNarc.ClassNameSameAsSuperclass" displayName="Class name same as superclass" groupPath="CodeNarc,Naming" groupKey="Naming" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.naming.ConfusingMethodNameInspectionTool" shortName="CodeNarc.ConfusingMethodName" displayName="Confusing method name" groupPath="CodeNarc,Naming" groupKey="Naming" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.naming.FactoryMethodNameInspectionTool" shortName="CodeNarc.FactoryMethodName" displayName="Factory method name" groupPath="CodeNarc,Naming" groupKey="Naming" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.naming.FieldNameInspectionTool" shortName="CodeNarc.FieldName" displayName="Field name" groupPath="CodeNarc,Naming" groupKey="Naming" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.naming.InterfaceNameInspectionTool" shortName="CodeNarc.InterfaceName" displayName="Interface name" groupPath="CodeNarc,Naming" groupKey="Naming" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.naming.MethodNameInspectionTool" shortName="CodeNarc.MethodName" displayName="Method name" groupPath="CodeNarc,Naming" groupKey="Naming" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.naming.ObjectOverrideMisspelledMethodNameInspectionTool" shortName="CodeNarc.ObjectOverrideMisspelledMethodName" displayName="Object override misspelled method name" groupPath="CodeNarc,Naming" groupKey="Naming" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.naming.PackageNameInspectionTool" shortName="CodeNarc.PackageName" displayName="Package name" groupPath="CodeNarc,Naming" groupKey="Naming" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.naming.PackageNameMatchesFilePathInspectionTool" shortName="CodeNarc.PackageNameMatchesFilePath" displayName="Package name matches file path" groupPath="CodeNarc,Naming" groupKey="Naming" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.naming.ParameterNameInspectionTool" shortName="CodeNarc.ParameterName" displayName="Parameter name" groupPath="CodeNarc,Naming" groupKey="Naming" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.naming.PropertyNameInspectionTool" shortName="CodeNarc.PropertyName" displayName="Property name" groupPath="CodeNarc,Naming" groupKey="Naming" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.naming.VariableNameInspectionTool" shortName="CodeNarc.VariableName" displayName="Variable name" groupPath="CodeNarc,Naming" groupKey="Naming" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.naming.InterfaceNameSameAsSuperInterfaceInspectionTool" shortName="CodeNarc.InterfaceNameSameAsSuperInterface" displayName="Interface name same as super interface" groupPath="CodeNarc,Naming" groupKey="Naming" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.exceptions.CatchArrayIndexOutOfBoundsExceptionInspectionTool" shortName="CodeNarc.CatchArrayIndexOutOfBoundsException" displayName="Catch array index out of bounds exception" groupPath="CodeNarc,Exceptions" groupKey="Exceptions" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.exceptions.CatchErrorInspectionTool" shortName="CodeNarc.CatchError" displayName="Catch error" groupPath="CodeNarc,Exceptions" groupKey="Exceptions" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.exceptions.CatchExceptionInspectionTool" shortName="CodeNarc.CatchException" displayName="Catch exception" groupPath="CodeNarc,Exceptions" groupKey="Exceptions" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.exceptions.CatchIllegalMonitorStateExceptionInspectionTool" shortName="CodeNarc.CatchIllegalMonitorStateException" displayName="Catch illegal monitor state exception" groupPath="CodeNarc,Exceptions" groupKey="Exceptions" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.exceptions.CatchIndexOutOfBoundsExceptionInspectionTool" shortName="CodeNarc.CatchIndexOutOfBoundsException" displayName="Catch index out of bounds exception" groupPath="CodeNarc,Exceptions" groupKey="Exceptions" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.exceptions.CatchNullPointerExceptionInspectionTool" shortName="CodeNarc.CatchNullPointerException" displayName="Catch null pointer exception" groupPath="CodeNarc,Exceptions" groupKey="Exceptions" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.exceptions.CatchRuntimeExceptionInspectionTool" shortName="CodeNarc.CatchRuntimeException" displayName="Catch runtime exception" groupPath="CodeNarc,Exceptions" groupKey="Exceptions" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.exceptions.CatchThrowableInspectionTool" shortName="CodeNarc.CatchThrowable" displayName="Catch throwable" groupPath="CodeNarc,Exceptions" groupKey="Exceptions" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.exceptions.ConfusingClassNamedExceptionInspectionTool" shortName="CodeNarc.ConfusingClassNamedException" displayName="Confusing class named exception" groupPath="CodeNarc,Exceptions" groupKey="Exceptions" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.exceptions.ExceptionExtendsErrorInspectionTool" shortName="CodeNarc.ExceptionExtendsError" displayName="Exception extends error" groupPath="CodeNarc,Exceptions" groupKey="Exceptions" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.exceptions.ExceptionExtendsThrowableInspectionTool" shortName="CodeNarc.ExceptionExtendsThrowable" displayName="Exception extends throwable" groupPath="CodeNarc,Exceptions" groupKey="Exceptions" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.exceptions.ExceptionNotThrownInspectionTool" shortName="CodeNarc.ExceptionNotThrown" displayName="Exception not thrown" groupPath="CodeNarc,Exceptions" groupKey="Exceptions" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.exceptions.MissingNewInThrowStatementInspectionTool" shortName="CodeNarc.MissingNewInThrowStatement" displayName="Missing new in throw statement" groupPath="CodeNarc,Exceptions" groupKey="Exceptions" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.exceptions.ReturnNullFromCatchBlockInspectionTool" shortName="CodeNarc.ReturnNullFromCatchBlock" displayName="Return null from catch block" groupPath="CodeNarc,Exceptions" groupKey="Exceptions" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.exceptions.SwallowThreadDeathInspectionTool" shortName="CodeNarc.SwallowThreadDeath" displayName="Swallow thread death" groupPath="CodeNarc,Exceptions" groupKey="Exceptions" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.exceptions.ThrowErrorInspectionTool" shortName="CodeNarc.ThrowError" displayName="Throw error" groupPath="CodeNarc,Exceptions" groupKey="Exceptions" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.exceptions.ThrowExceptionInspectionTool" shortName="CodeNarc.ThrowException" displayName="Throw exception" groupPath="CodeNarc,Exceptions" groupKey="Exceptions" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.exceptions.ThrowNullPointerExceptionInspectionTool" shortName="CodeNarc.ThrowNullPointerException" displayName="Throw null pointer exception" groupPath="CodeNarc,Exceptions" groupKey="Exceptions" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.exceptions.ThrowRuntimeExceptionInspectionTool" shortName="CodeNarc.ThrowRuntimeException" displayName="Throw runtime exception" groupPath="CodeNarc,Exceptions" groupKey="Exceptions" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.exceptions.ThrowThrowableInspectionTool" shortName="CodeNarc.ThrowThrowable" displayName="Throw throwable" groupPath="CodeNarc,Exceptions" groupKey="Exceptions" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.groovyism.AssignCollectionSortInspectionTool" shortName="CodeNarc.AssignCollectionSort" displayName="Assign collection sort" groupPath="CodeNarc,Groovyism" groupKey="Groovyism" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.groovyism.AssignCollectionUniqueInspectionTool" shortName="CodeNarc.AssignCollectionUnique" displayName="Assign collection unique" groupPath="CodeNarc,Groovyism" groupKey="Groovyism" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.groovyism.ClosureAsLastMethodParameterInspectionTool" shortName="CodeNarc.ClosureAsLastMethodParameter" displayName="Closure as last method parameter" groupPath="CodeNarc,Groovyism" groupKey="Groovyism" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.groovyism.CollectAllIsDeprecatedInspectionTool" shortName="CodeNarc.CollectAllIsDeprecated" displayName="Collect all is deprecated" groupPath="CodeNarc,Groovyism" groupKey="Groovyism" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.groovyism.ConfusingMultipleReturnsInspectionTool" shortName="CodeNarc.ConfusingMultipleReturns" displayName="Confusing multiple returns" groupPath="CodeNarc,Groovyism" groupKey="Groovyism" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.groovyism.ExplicitArrayListInstantiationInspectionTool" shortName="CodeNarc.ExplicitArrayListInstantiation" displayName="Explicit array list instantiation" groupPath="CodeNarc,Groovyism" groupKey="Groovyism" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.groovyism.ExplicitCallToPlusMethodInspectionTool" shortName="CodeNarc.ExplicitCallToPlusMethod" displayName="Explicit call to plus method" groupPath="CodeNarc,Groovyism" groupKey="Groovyism" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.groovyism.ExplicitCallToMinusMethodInspectionTool" shortName="CodeNarc.ExplicitCallToMinusMethod" displayName="Explicit call to minus method" groupPath="CodeNarc,Groovyism" groupKey="Groovyism" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.groovyism.ExplicitCallToMultiplyMethodInspectionTool" shortName="CodeNarc.ExplicitCallToMultiplyMethod" displayName="Explicit call to multiply method" groupPath="CodeNarc,Groovyism" groupKey="Groovyism" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.groovyism.ExplicitCallToDivMethodInspectionTool" shortName="CodeNarc.ExplicitCallToDivMethod" displayName="Explicit call to div method" groupPath="CodeNarc,Groovyism" groupKey="Groovyism" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.groovyism.ExplicitCallToPowerMethodInspectionTool" shortName="CodeNarc.ExplicitCallToPowerMethod" displayName="Explicit call to power method" groupPath="CodeNarc,Groovyism" groupKey="Groovyism" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.groovyism.ExplicitCallToModMethodInspectionTool" shortName="CodeNarc.ExplicitCallToModMethod" displayName="Explicit call to mod method" groupPath="CodeNarc,Groovyism" groupKey="Groovyism" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.groovyism.ExplicitCallToOrMethodInspectionTool" shortName="CodeNarc.ExplicitCallToOrMethod" displayName="Explicit call to or method" groupPath="CodeNarc,Groovyism" groupKey="Groovyism" level="WARNING" enabledByDefault="false"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.groovyism.ExplicitCallToAndMethodInspectionTool" shortName="CodeNarc.ExplicitCallToAndMethod" displayName="Explicit call to and method" groupPath="CodeNarc,Groovyism" groupKey="Groovyism" level="WARNING" enabledByDefault="false"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.groovyism.ExplicitCallToXorMethodInspectionTool" shortName="CodeNarc.ExplicitCallToXorMethod" displayName="Explicit call to xor method" groupPath="CodeNarc,Groovyism" groupKey="Groovyism" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.groovyism.ExplicitCallToGetAtMethodInspectionTool" shortName="CodeNarc.ExplicitCallToGetAtMethod" displayName="Explicit call to get at method" groupPath="CodeNarc,Groovyism" groupKey="Groovyism" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.groovyism.ExplicitCallToLeftShiftMethodInspectionTool" shortName="CodeNarc.ExplicitCallToLeftShiftMethod" displayName="Explicit call to left shift method" groupPath="CodeNarc,Groovyism" groupKey="Groovyism" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.groovyism.ExplicitCallToRightShiftMethodInspectionTool" shortName="CodeNarc.ExplicitCallToRightShiftMethod" displayName="Explicit call to right shift method" groupPath="CodeNarc,Groovyism" groupKey="Groovyism" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.groovyism.ExplicitCallToCompareToMethodInspectionTool" shortName="CodeNarc.ExplicitCallToCompareToMethod" displayName="Explicit call to compare to method" groupPath="CodeNarc,Groovyism" groupKey="Groovyism" level="WARNING" enabledByDefault="false"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.groovyism.ExplicitCallToEqualsMethodInspectionTool" shortName="CodeNarc.ExplicitCallToEqualsMethod" displayName="Explicit call to equals method" groupPath="CodeNarc,Groovyism" groupKey="Groovyism" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.groovyism.ExplicitHashMapInstantiationInspectionTool" shortName="CodeNarc.ExplicitHashMapInstantiation" displayName="Explicit hash map instantiation" groupPath="CodeNarc,Groovyism" groupKey="Groovyism" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.groovyism.ExplicitLinkedHashMapInstantiationInspectionTool" shortName="CodeNarc.ExplicitLinkedHashMapInstantiation" displayName="Explicit linked hash map instantiation" groupPath="CodeNarc,Groovyism" groupKey="Groovyism" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.groovyism.ExplicitHashSetInstantiationInspectionTool" shortName="CodeNarc.ExplicitHashSetInstantiation" displayName="Explicit hash set instantiation" groupPath="CodeNarc,Groovyism" groupKey="Groovyism" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.groovyism.ExplicitLinkedListInstantiationInspectionTool" shortName="CodeNarc.ExplicitLinkedListInstantiation" displayName="Explicit linked list instantiation" groupPath="CodeNarc,Groovyism" groupKey="Groovyism" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.groovyism.ExplicitStackInstantiationInspectionTool" shortName="CodeNarc.ExplicitStackInstantiation" displayName="Explicit stack instantiation" groupPath="CodeNarc,Groovyism" groupKey="Groovyism" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.groovyism.ExplicitTreeSetInstantiationInspectionTool" shortName="CodeNarc.ExplicitTreeSetInstantiation" displayName="Explicit tree set instantiation" groupPath="CodeNarc,Groovyism" groupKey="Groovyism" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.groovyism.GetterMethodCouldBePropertyInspectionTool" shortName="CodeNarc.GetterMethodCouldBeProperty" displayName="Getter method could be property" groupPath="CodeNarc,Groovyism" groupKey="Groovyism" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.groovyism.GroovyLangImmutableInspectionTool" shortName="CodeNarc.GroovyLangImmutable" displayName="Groovy lang immutable" groupPath="CodeNarc,Groovyism" groupKey="Groovyism" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.groovyism.GStringAsMapKeyInspectionTool" shortName="CodeNarc.GStringAsMapKey" displayName="GString as map key" groupPath="CodeNarc,Groovyism" groupKey="Groovyism" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.groovyism.GStringExpressionWithinStringInspectionTool" shortName="CodeNarc.GStringExpressionWithinString" displayName="GString expression within string" groupPath="CodeNarc,Groovyism" groupKey="Groovyism" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.groovyism.UseCollectManyInspectionTool" shortName="CodeNarc.UseCollectMany" displayName="Use collect many" groupPath="CodeNarc,Groovyism" groupKey="Groovyism" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.groovyism.UseCollectNestedInspectionTool" shortName="CodeNarc.UseCollectNested" displayName="Use collect nested" groupPath="CodeNarc,Groovyism" groupKey="Groovyism" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.groovyism.ExplicitCallToPutAtMethodInspectionTool" shortName="CodeNarc.ExplicitCallToPutAtMethod" displayName="Explicit call to put at method" groupPath="CodeNarc,Groovyism" groupKey="Groovyism" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.serialization.EnumCustomSerializationIgnoredInspectionTool" shortName="CodeNarc.EnumCustomSerializationIgnored" displayName="Enum custom serialization ignored" groupPath="CodeNarc,Serialization" groupKey="Serialization" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.serialization.SerializableClassMustDefineSerialVersionUIDInspectionTool" shortName="CodeNarc.SerializableClassMustDefineSerialVersionUID" displayName="Serializable class must define serial versionUID" groupPath="CodeNarc,Serialization" groupKey="Serialization" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.serialization.SerialPersistentFieldsInspectionTool" shortName="CodeNarc.SerialPersistentFields" displayName="Serial persistent fields" groupPath="CodeNarc,Serialization" groupKey="Serialization" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.serialization.SerialVersionUIDInspectionTool" shortName="CodeNarc.SerialVersionUID" displayName="Serial versionUID" groupPath="CodeNarc,Serialization" groupKey="Serialization" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.basic.AssertWithinFinallyBlockInspectionTool" shortName="CodeNarc.AssertWithinFinallyBlock" displayName="Assert within finally block" groupPath="CodeNarc,Basic" groupKey="Basic" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.basic.AssignmentInConditionalInspectionTool" shortName="CodeNarc.AssignmentInConditional" displayName="Assignment in conditional" groupPath="CodeNarc,Basic" groupKey="Basic" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.basic.BigDecimalInstantiationInspectionTool" shortName="CodeNarc.BigDecimalInstantiation" displayName="Big decimal instantiation" groupPath="CodeNarc,Basic" groupKey="Basic" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.basic.BitwiseOperatorInConditionalInspectionTool" shortName="CodeNarc.BitwiseOperatorInConditional" displayName="Bitwise operator in conditional" groupPath="CodeNarc,Basic" groupKey="Basic" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.basic.BooleanGetBooleanInspectionTool" shortName="CodeNarc.BooleanGetBoolean" displayName="Boolean get boolean" groupPath="CodeNarc,Basic" groupKey="Basic" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.basic.BrokenNullCheckInspectionTool" shortName="CodeNarc.BrokenNullCheck" displayName="Broken null check" groupPath="CodeNarc,Basic" groupKey="Basic" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.basic.BrokenOddnessCheckInspectionTool" shortName="CodeNarc.BrokenOddnessCheck" displayName="Broken oddness check" groupPath="CodeNarc,Basic" groupKey="Basic" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.basic.ClassForNameInspectionTool" shortName="CodeNarc.ClassForName" displayName="Class for name" groupPath="CodeNarc,Basic" groupKey="Basic" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.basic.ComparisonOfTwoConstantsInspectionTool" shortName="CodeNarc.ComparisonOfTwoConstants" displayName="Comparison of two constants" groupPath="CodeNarc,Basic" groupKey="Basic" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.basic.ComparisonWithSelfInspectionTool" shortName="CodeNarc.ComparisonWithSelf" displayName="Comparison with self" groupPath="CodeNarc,Basic" groupKey="Basic" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.basic.ConstantAssertExpressionInspectionTool" shortName="CodeNarc.ConstantAssertExpression" displayName="Constant assert expression" groupPath="CodeNarc,Basic" groupKey="Basic" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.basic.ConstantTernaryExpressionInspectionTool" shortName="CodeNarc.ConstantTernaryExpression" displayName="Constant ternary expression" groupPath="CodeNarc,Basic" groupKey="Basic" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.basic.ConstantIfExpressionInspectionTool" shortName="CodeNarc.ConstantIfExpression" displayName="Constant if expression" groupPath="CodeNarc,Basic" groupKey="Basic" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.basic.DeadCodeInspectionTool" shortName="CodeNarc.DeadCode" displayName="Dead code" groupPath="CodeNarc,Basic" groupKey="Basic" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.basic.DoubleNegativeInspectionTool" shortName="CodeNarc.DoubleNegative" displayName="Double negative" groupPath="CodeNarc,Basic" groupKey="Basic" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.basic.DuplicateCaseStatementInspectionTool" shortName="CodeNarc.DuplicateCaseStatement" displayName="Duplicate case statement" groupPath="CodeNarc,Basic" groupKey="Basic" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.basic.DuplicateMapKeyInspectionTool" shortName="CodeNarc.DuplicateMapKey" displayName="Duplicate map key" groupPath="CodeNarc,Basic" groupKey="Basic" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.basic.DuplicateSetValueInspectionTool" shortName="CodeNarc.DuplicateSetValue" displayName="Duplicate set value" groupPath="CodeNarc,Basic" groupKey="Basic" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.basic.EmptyCatchBlockInspectionTool" shortName="CodeNarc.EmptyCatchBlock" displayName="Empty catch block" groupPath="CodeNarc,Basic" groupKey="Basic" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.basic.EmptyClassInspectionTool" shortName="CodeNarc.EmptyClass" displayName="Empty class" groupPath="CodeNarc,Basic" groupKey="Basic" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.basic.EmptyElseBlockInspectionTool" shortName="CodeNarc.EmptyElseBlock" displayName="Empty else block" groupPath="CodeNarc,Basic" groupKey="Basic" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.basic.EmptyFinallyBlockInspectionTool" shortName="CodeNarc.EmptyFinallyBlock" displayName="Empty finally block" groupPath="CodeNarc,Basic" groupKey="Basic" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.basic.EmptyForStatementInspectionTool" shortName="CodeNarc.EmptyForStatement" displayName="Empty for statement" groupPath="CodeNarc,Basic" groupKey="Basic" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.basic.EmptyIfStatementInspectionTool" shortName="CodeNarc.EmptyIfStatement" displayName="Empty if statement" groupPath="CodeNarc,Basic" groupKey="Basic" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.basic.EmptySwitchStatementInspectionTool" shortName="CodeNarc.EmptySwitchStatement" displayName="Empty switch statement" groupPath="CodeNarc,Basic" groupKey="Basic" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.basic.EmptySynchronizedStatementInspectionTool" shortName="CodeNarc.EmptySynchronizedStatement" displayName="Empty synchronized statement" groupPath="CodeNarc,Basic" groupKey="Basic" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.basic.EmptyStaticInitializerInspectionTool" shortName="CodeNarc.EmptyStaticInitializer" displayName="Empty static initializer" groupPath="CodeNarc,Basic" groupKey="Basic" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.basic.EmptyTryBlockInspectionTool" shortName="CodeNarc.EmptyTryBlock" displayName="Empty try block" groupPath="CodeNarc,Basic" groupKey="Basic" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.basic.EmptyWhileStatementInspectionTool" shortName="CodeNarc.EmptyWhileStatement" displayName="Empty while statement" groupPath="CodeNarc,Basic" groupKey="Basic" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.basic.EmptyInstanceInitializerInspectionTool" shortName="CodeNarc.EmptyInstanceInitializer" displayName="Empty instance initializer" groupPath="CodeNarc,Basic" groupKey="Basic" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.basic.EmptyMethodInspectionTool" shortName="CodeNarc.EmptyMethod" displayName="Empty method" groupPath="CodeNarc,Basic" groupKey="Basic" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.basic.EqualsAndHashCodeInspectionTool" shortName="CodeNarc.EqualsAndHashCode" displayName="Equals and hash code" groupPath="CodeNarc,Basic" groupKey="Basic" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.basic.EqualsOverloadedInspectionTool" shortName="CodeNarc.EqualsOverloaded" displayName="Equals overloaded" groupPath="CodeNarc,Basic" groupKey="Basic" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.basic.ExplicitGarbageCollectionInspectionTool" shortName="CodeNarc.ExplicitGarbageCollection" displayName="Explicit garbage collection" groupPath="CodeNarc,Basic" groupKey="Basic" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.basic.ForLoopShouldBeWhileLoopInspectionTool" shortName="CodeNarc.ForLoopShouldBeWhileLoop" displayName="For loop should be while loop" groupPath="CodeNarc,Basic" groupKey="Basic" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.basic.HardCodedWindowsFileSeparatorInspectionTool" shortName="CodeNarc.HardCodedWindowsFileSeparator" displayName="Hard coded windows file separator" groupPath="CodeNarc,Basic" groupKey="Basic" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.basic.HardCodedWindowsRootDirectoryInspectionTool" shortName="CodeNarc.HardCodedWindowsRootDirectory" displayName="Hard coded windows root directory" groupPath="CodeNarc,Basic" groupKey="Basic" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.basic.IntegerGetIntegerInspectionTool" shortName="CodeNarc.IntegerGetInteger" displayName="Integer get integer" groupPath="CodeNarc,Basic" groupKey="Basic" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.basic.MultipleUnaryOperatorsInspectionTool" shortName="CodeNarc.MultipleUnaryOperators" displayName="Multiple unary operators" groupPath="CodeNarc,Basic" groupKey="Basic" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.basic.RandomDoubleCoercedToZeroInspectionTool" shortName="CodeNarc.RandomDoubleCoercedToZero" displayName="Random double coerced to zero" groupPath="CodeNarc,Basic" groupKey="Basic" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.basic.RemoveAllOnSelfInspectionTool" shortName="CodeNarc.RemoveAllOnSelf" displayName="Remove all on self" groupPath="CodeNarc,Basic" groupKey="Basic" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.basic.ReturnFromFinallyBlockInspectionTool" shortName="CodeNarc.ReturnFromFinallyBlock" displayName="Return from finally block" groupPath="CodeNarc,Basic" groupKey="Basic" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.basic.ThrowExceptionFromFinallyBlockInspectionTool" shortName="CodeNarc.ThrowExceptionFromFinallyBlock" displayName="Throw exception from finally block" groupPath="CodeNarc,Basic" groupKey="Basic" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.basic.ParameterAssignmentInFilterClosureInspectionTool" shortName="CodeNarc.ParameterAssignmentInFilterClosure" displayName="Parameter assignment in filter closure" groupPath="CodeNarc,Basic" groupKey="Basic" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.concurrency.BusyWaitInspectionTool" shortName="CodeNarc.BusyWait" displayName="Busy wait" groupPath="CodeNarc,Concurrency" groupKey="Concurrency" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.concurrency.DoubleCheckedLockingInspectionTool" shortName="CodeNarc.DoubleCheckedLocking" displayName="Double checked locking" groupPath="CodeNarc,Concurrency" groupKey="Concurrency" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.concurrency.InconsistentPropertyLockingInspectionTool" shortName="CodeNarc.InconsistentPropertyLocking" displayName="Inconsistent property locking" groupPath="CodeNarc,Concurrency" groupKey="Concurrency" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.concurrency.InconsistentPropertySynchronizationInspectionTool" shortName="CodeNarc.InconsistentPropertySynchronization" displayName="Inconsistent property synchronization" groupPath="CodeNarc,Concurrency" groupKey="Concurrency" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.concurrency.NestedSynchronizationInspectionTool" shortName="CodeNarc.NestedSynchronization" displayName="Nested synchronization" groupPath="CodeNarc,Concurrency" groupKey="Concurrency" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.concurrency.StaticCalendarFieldInspectionTool" shortName="CodeNarc.StaticCalendarField" displayName="Static calendar field" groupPath="CodeNarc,Concurrency" groupKey="Concurrency" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.concurrency.StaticConnectionInspectionTool" shortName="CodeNarc.StaticConnection" displayName="Static connection" groupPath="CodeNarc,Concurrency" groupKey="Concurrency" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.concurrency.StaticDateFormatFieldInspectionTool" shortName="CodeNarc.StaticDateFormatField" displayName="Static date format field" groupPath="CodeNarc,Concurrency" groupKey="Concurrency" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.concurrency.StaticMatcherFieldInspectionTool" shortName="CodeNarc.StaticMatcherField" displayName="Static matcher field" groupPath="CodeNarc,Concurrency" groupKey="Concurrency" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.concurrency.StaticSimpleDateFormatFieldInspectionTool" shortName="CodeNarc.StaticSimpleDateFormatField" displayName="Static simple date format field" groupPath="CodeNarc,Concurrency" groupKey="Concurrency" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.concurrency.SynchronizedOnBoxedPrimitiveInspectionTool" shortName="CodeNarc.SynchronizedOnBoxedPrimitive" displayName="Synchronized on boxed primitive" groupPath="CodeNarc,Concurrency" groupKey="Concurrency" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.concurrency.SynchronizedMethodInspectionTool" shortName="CodeNarc.SynchronizedMethod" displayName="Synchronized method" groupPath="CodeNarc,Concurrency" groupKey="Concurrency" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.concurrency.SynchronizedOnThisInspectionTool" shortName="CodeNarc.SynchronizedOnThis" displayName="Synchronized on this" groupPath="CodeNarc,Concurrency" groupKey="Concurrency" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.concurrency.SynchronizedOnGetClassInspectionTool" shortName="CodeNarc.SynchronizedOnGetClass" displayName="Synchronized on get class" groupPath="CodeNarc,Concurrency" groupKey="Concurrency" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.concurrency.SynchronizedOnReentrantLockInspectionTool" shortName="CodeNarc.SynchronizedOnReentrantLock" displayName="Synchronized on reentrant lock" groupPath="CodeNarc,Concurrency" groupKey="Concurrency" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.concurrency.SynchronizedOnStringInspectionTool" shortName="CodeNarc.SynchronizedOnString" displayName="Synchronized on string" groupPath="CodeNarc,Concurrency" groupKey="Concurrency" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.concurrency.SynchronizedReadObjectMethodInspectionTool" shortName="CodeNarc.SynchronizedReadObjectMethod" displayName="Synchronized read object method" groupPath="CodeNarc,Concurrency" groupKey="Concurrency" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.concurrency.SystemRunFinalizersOnExitInspectionTool" shortName="CodeNarc.SystemRunFinalizersOnExit" displayName="System run finalizers on exit" groupPath="CodeNarc,Concurrency" groupKey="Concurrency" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.concurrency.ThisReferenceEscapesConstructorInspectionTool" shortName="CodeNarc.ThisReferenceEscapesConstructor" displayName="This reference escapes constructor" groupPath="CodeNarc,Concurrency" groupKey="Concurrency" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.concurrency.ThreadGroupInspectionTool" shortName="CodeNarc.ThreadGroup" displayName="Thread group" groupPath="CodeNarc,Concurrency" groupKey="Concurrency" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.concurrency.ThreadLocalNotStaticFinalInspectionTool" shortName="CodeNarc.ThreadLocalNotStaticFinal" displayName="Thread local not static final" groupPath="CodeNarc,Concurrency" groupKey="Concurrency" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.concurrency.ThreadYieldInspectionTool" shortName="CodeNarc.ThreadYield" displayName="Thread yield" groupPath="CodeNarc,Concurrency" groupKey="Concurrency" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.concurrency.UseOfNotifyMethodInspectionTool" shortName="CodeNarc.UseOfNotifyMethod" displayName="Use of notify method" groupPath="CodeNarc,Concurrency" groupKey="Concurrency" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.concurrency.VolatileArrayFieldInspectionTool" shortName="CodeNarc.VolatileArrayField" displayName="Volatile array field" groupPath="CodeNarc,Concurrency" groupKey="Concurrency" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.concurrency.VolatileLongOrDoubleFieldInspectionTool" shortName="CodeNarc.VolatileLongOrDoubleField" displayName="Volatile long or double field" groupPath="CodeNarc,Concurrency" groupKey="Concurrency" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.concurrency.WaitOutsideOfWhileLoopInspectionTool" shortName="CodeNarc.WaitOutsideOfWhileLoop" displayName="Wait outside of while loop" groupPath="CodeNarc,Concurrency" groupKey="Concurrency" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.formatting.BlankLineBeforePackageInspectionTool" shortName="CodeNarc.BlankLineBeforePackage" displayName="Blank line before package" groupPath="CodeNarc,Formatting" groupKey="Formatting" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.formatting.BlockEndsWithBlankLineInspectionTool" shortName="CodeNarc.BlockEndsWithBlankLine" displayName="Block ends with blank line" groupPath="CodeNarc,Formatting" groupKey="Formatting" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.formatting.BlockStartsWithBlankLineInspectionTool" shortName="CodeNarc.BlockStartsWithBlankLine" displayName="Block starts with blank line" groupPath="CodeNarc,Formatting" groupKey="Formatting" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.formatting.BracesForClassInspectionTool" shortName="CodeNarc.BracesForClass" displayName="Braces for class" groupPath="CodeNarc,Formatting" groupKey="Formatting" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.formatting.BracesForForLoopInspectionTool" shortName="CodeNarc.BracesForForLoop" displayName="Braces for for loop" groupPath="CodeNarc,Formatting" groupKey="Formatting" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.formatting.BracesForIfElseInspectionTool" shortName="CodeNarc.BracesForIfElse" displayName="Braces for if else" groupPath="CodeNarc,Formatting" groupKey="Formatting" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.formatting.BracesForMethodInspectionTool" shortName="CodeNarc.BracesForMethod" displayName="Braces for method" groupPath="CodeNarc,Formatting" groupKey="Formatting" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.formatting.BracesForTryCatchFinallyInspectionTool" shortName="CodeNarc.BracesForTryCatchFinally" displayName="Braces for try catch finally" groupPath="CodeNarc,Formatting" groupKey="Formatting" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.formatting.ClassEndsWithBlankLineInspectionTool" shortName="CodeNarc.ClassEndsWithBlankLine" displayName="Class ends with blank line" groupPath="CodeNarc,Formatting" groupKey="Formatting" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.formatting.ClassStartsWithBlankLineInspectionTool" shortName="CodeNarc.ClassStartsWithBlankLine" displayName="Class starts with blank line" groupPath="CodeNarc,Formatting" groupKey="Formatting" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.formatting.ClosureStatementOnOpeningLineOfMultipleLineClosureInspectionTool" shortName="CodeNarc.ClosureStatementOnOpeningLineOfMultipleLineClosure" displayName="Closure statement on opening line of multiple line closure" groupPath="CodeNarc,Formatting" groupKey="Formatting" level="WEAK WARNING" enabledByDefault="false"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.formatting.ConsecutiveBlankLinesInspectionTool" shortName="CodeNarc.ConsecutiveBlankLines" displayName="Consecutive blank lines" groupPath="CodeNarc,Formatting" groupKey="Formatting" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.formatting.FileEndsWithoutNewlineInspectionTool" shortName="CodeNarc.FileEndsWithoutNewline" displayName="File ends without newline" groupPath="CodeNarc,Formatting" groupKey="Formatting" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.formatting.IndentationInspectionTool" shortName="CodeNarc.Indentation" displayName="Indentation" groupPath="CodeNarc,Formatting" groupKey="Formatting" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.formatting.LineLengthInspectionTool" shortName="CodeNarc.LineLength" displayName="Line length" groupPath="CodeNarc,Formatting" groupKey="Formatting" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.formatting.SpaceAfterMethodCallNameInspectionTool" shortName="CodeNarc.SpaceAfterMethodCallName" displayName="Space after method call name" groupPath="CodeNarc,Formatting" groupKey="Formatting" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.formatting.SpaceAfterMethodDeclarationNameInspectionTool" shortName="CodeNarc.SpaceAfterMethodDeclarationName" displayName="Space after method declaration name" groupPath="CodeNarc,Formatting" groupKey="Formatting" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.formatting.MissingBlankLineAfterImportsInspectionTool" shortName="CodeNarc.MissingBlankLineAfterImports" displayName="Missing blank line after imports" groupPath="CodeNarc,Formatting" groupKey="Formatting" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.formatting.MissingBlankLineAfterPackageInspectionTool" shortName="CodeNarc.MissingBlankLineAfterPackage" displayName="Missing blank line after package" groupPath="CodeNarc,Formatting" groupKey="Formatting" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.formatting.MissingBlankLineBeforeAnnotatedFieldInspectionTool" shortName="CodeNarc.MissingBlankLineBeforeAnnotatedField" displayName="Missing blank line before annotated field" groupPath="CodeNarc,Formatting" groupKey="Formatting" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.formatting.SpaceAfterCatchInspectionTool" shortName="CodeNarc.SpaceAfterCatch" displayName="Space after catch" groupPath="CodeNarc,Formatting" groupKey="Formatting" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.formatting.SpaceAfterClosingBraceInspectionTool" shortName="CodeNarc.SpaceAfterClosingBrace" displayName="Space after closing brace" groupPath="CodeNarc,Formatting" groupKey="Formatting" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.formatting.SpaceAfterCommaInspectionTool" shortName="CodeNarc.SpaceAfterComma" displayName="Space after comma" groupPath="CodeNarc,Formatting" groupKey="Formatting" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.formatting.SpaceAfterForInspectionTool" shortName="CodeNarc.SpaceAfterFor" displayName="Space after for" groupPath="CodeNarc,Formatting" groupKey="Formatting" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.formatting.SpaceAfterIfInspectionTool" shortName="CodeNarc.SpaceAfterIf" displayName="Space after if" groupPath="CodeNarc,Formatting" groupKey="Formatting" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.formatting.SpaceAfterNotOperatorInspectionTool" shortName="CodeNarc.SpaceAfterNotOperator" displayName="Space after not operator" groupPath="CodeNarc,Formatting" groupKey="Formatting" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.formatting.SpaceAfterOpeningBraceInspectionTool" shortName="CodeNarc.SpaceAfterOpeningBrace" displayName="Space after opening brace" groupPath="CodeNarc,Formatting" groupKey="Formatting" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.formatting.SpaceAfterSemicolonInspectionTool" shortName="CodeNarc.SpaceAfterSemicolon" displayName="Space after semicolon" groupPath="CodeNarc,Formatting" groupKey="Formatting" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.formatting.SpaceAfterSwitchInspectionTool" shortName="CodeNarc.SpaceAfterSwitch" displayName="Space after switch" groupPath="CodeNarc,Formatting" groupKey="Formatting" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.formatting.SpaceAfterWhileInspectionTool" shortName="CodeNarc.SpaceAfterWhile" displayName="Space after while" groupPath="CodeNarc,Formatting" groupKey="Formatting" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.formatting.SpaceAroundClosureArrowInspectionTool" shortName="CodeNarc.SpaceAroundClosureArrow" displayName="Space around closure arrow" groupPath="CodeNarc,Formatting" groupKey="Formatting" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.formatting.SpaceAroundMapEntryColonInspectionTool" shortName="CodeNarc.SpaceAroundMapEntryColon" displayName="Space around map entry colon" groupPath="CodeNarc,Formatting" groupKey="Formatting" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.formatting.SpaceAroundOperatorInspectionTool" shortName="CodeNarc.SpaceAroundOperator" displayName="Space around operator" groupPath="CodeNarc,Formatting" groupKey="Formatting" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.formatting.SpaceBeforeClosingBraceInspectionTool" shortName="CodeNarc.SpaceBeforeClosingBrace" displayName="Space before closing brace" groupPath="CodeNarc,Formatting" groupKey="Formatting" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.formatting.SpaceBeforeOpeningBraceInspectionTool" shortName="CodeNarc.SpaceBeforeOpeningBrace" displayName="Space before opening brace" groupPath="CodeNarc,Formatting" groupKey="Formatting" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.formatting.SpaceInsideParenthesesInspectionTool" shortName="CodeNarc.SpaceInsideParentheses" displayName="Space inside parentheses" groupPath="CodeNarc,Formatting" groupKey="Formatting" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.formatting.TrailingWhitespaceInspectionTool" shortName="CodeNarc.TrailingWhitespace" displayName="Trailing whitespace" groupPath="CodeNarc,Formatting" groupKey="Formatting" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.jdbc.DirectConnectionManagementInspectionTool" shortName="CodeNarc.DirectConnectionManagement" displayName="Direct connection management" groupPath="CodeNarc,Jdbc" groupKey="Jdbc" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.jdbc.JdbcConnectionReferenceInspectionTool" shortName="CodeNarc.JdbcConnectionReference" displayName="Jdbc connection reference" groupPath="CodeNarc,Jdbc" groupKey="Jdbc" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.jdbc.JdbcResultSetReferenceInspectionTool" shortName="CodeNarc.JdbcResultSetReference" displayName="Jdbc result set reference" groupPath="CodeNarc,Jdbc" groupKey="Jdbc" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.jdbc.JdbcStatementReferenceInspectionTool" shortName="CodeNarc.JdbcStatementReference" displayName="Jdbc statement reference" groupPath="CodeNarc,Jdbc" groupKey="Jdbc" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.unnecessary.AddEmptyStringInspectionTool" shortName="CodeNarc.AddEmptyString" displayName="Add empty string" groupPath="CodeNarc,Unnecessary" groupKey="Unnecessary" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.unnecessary.ConsecutiveStringConcatenationInspectionTool" shortName="CodeNarc.ConsecutiveStringConcatenation" displayName="Consecutive string concatenation" groupPath="CodeNarc,Unnecessary" groupKey="Unnecessary" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.unnecessary.ConsecutiveLiteralAppendsInspectionTool" shortName="CodeNarc.ConsecutiveLiteralAppends" displayName="Consecutive literal appends" groupPath="CodeNarc,Unnecessary" groupKey="Unnecessary" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.unnecessary.UnnecessaryBigDecimalInstantiationInspectionTool" shortName="CodeNarc.UnnecessaryBigDecimalInstantiation" displayName="Unnecessary big decimal instantiation" groupPath="CodeNarc,Unnecessary" groupKey="Unnecessary" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.unnecessary.UnnecessaryBigIntegerInstantiationInspectionTool" shortName="CodeNarc.UnnecessaryBigIntegerInstantiation" displayName="Unnecessary big integer instantiation" groupPath="CodeNarc,Unnecessary" groupKey="Unnecessary" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.unnecessary.UnnecessaryBooleanExpressionInspectionTool" shortName="CodeNarc.UnnecessaryBooleanExpression" displayName="Unnecessary boolean expression" groupPath="CodeNarc,Unnecessary" groupKey="Unnecessary" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.unnecessary.UnnecessaryBooleanInstantiationInspectionTool" shortName="CodeNarc.UnnecessaryBooleanInstantiation" displayName="Unnecessary boolean instantiation" groupPath="CodeNarc,Unnecessary" groupKey="Unnecessary" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.unnecessary.UnnecessaryCallForLastElementInspectionTool" shortName="CodeNarc.UnnecessaryCallForLastElement" displayName="Unnecessary call for last element" groupPath="CodeNarc,Unnecessary" groupKey="Unnecessary" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.unnecessary.UnnecessaryCallToSubstringInspectionTool" shortName="CodeNarc.UnnecessaryCallToSubstring" displayName="Unnecessary call to substring" groupPath="CodeNarc,Unnecessary" groupKey="Unnecessary" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.unnecessary.UnnecessaryCastInspectionTool" shortName="CodeNarc.UnnecessaryCast" displayName="Unnecessary cast" groupPath="CodeNarc,Unnecessary" groupKey="Unnecessary" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.unnecessary.UnnecessaryCatchBlockInspectionTool" shortName="CodeNarc.UnnecessaryCatchBlock" displayName="Unnecessary catch block" groupPath="CodeNarc,Unnecessary" groupKey="Unnecessary" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.unnecessary.UnnecessaryCollectCallInspectionTool" shortName="CodeNarc.UnnecessaryCollectCall" displayName="Unnecessary collect call" groupPath="CodeNarc,Unnecessary" groupKey="Unnecessary" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.unnecessary.UnnecessaryCollectionCallInspectionTool" shortName="CodeNarc.UnnecessaryCollectionCall" displayName="Unnecessary collection call" groupPath="CodeNarc,Unnecessary" groupKey="Unnecessary" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.unnecessary.UnnecessaryConstructorInspectionTool" shortName="CodeNarc.UnnecessaryConstructor" displayName="Unnecessary constructor" groupPath="CodeNarc,Unnecessary" groupKey="Unnecessary" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.unnecessary.UnnecessaryDefInFieldDeclarationInspectionTool" shortName="CodeNarc.UnnecessaryDefInFieldDeclaration" displayName="Unnecessary def in field declaration" groupPath="CodeNarc,Unnecessary" groupKey="Unnecessary" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.unnecessary.UnnecessaryDefInMethodDeclarationInspectionTool" shortName="CodeNarc.UnnecessaryDefInMethodDeclaration" displayName="Unnecessary def in method declaration" groupPath="CodeNarc,Unnecessary" groupKey="Unnecessary" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.unnecessary.UnnecessaryDefInVariableDeclarationInspectionTool" shortName="CodeNarc.UnnecessaryDefInVariableDeclaration" displayName="Unnecessary def in variable declaration" groupPath="CodeNarc,Unnecessary" groupKey="Unnecessary" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.unnecessary.UnnecessaryDotClassInspectionTool" shortName="CodeNarc.UnnecessaryDotClass" displayName="Unnecessary dot class" groupPath="CodeNarc,Unnecessary" groupKey="Unnecessary" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.unnecessary.UnnecessaryDoubleInstantiationInspectionTool" shortName="CodeNarc.UnnecessaryDoubleInstantiation" displayName="Unnecessary double instantiation" groupPath="CodeNarc,Unnecessary" groupKey="Unnecessary" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.unnecessary.UnnecessaryElseStatementInspectionTool" shortName="CodeNarc.UnnecessaryElseStatement" displayName="Unnecessary else statement" groupPath="CodeNarc,Unnecessary" groupKey="Unnecessary" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.unnecessary.UnnecessaryFinalOnPrivateMethodInspectionTool" shortName="CodeNarc.UnnecessaryFinalOnPrivateMethod" displayName="Unnecessary final on private method" groupPath="CodeNarc,Unnecessary" groupKey="Unnecessary" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.unnecessary.UnnecessaryFloatInstantiationInspectionTool" shortName="CodeNarc.UnnecessaryFloatInstantiation" displayName="Unnecessary float instantiation" groupPath="CodeNarc,Unnecessary" groupKey="Unnecessary" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.unnecessary.UnnecessaryGetterInspectionTool" shortName="CodeNarc.UnnecessaryGetter" displayName="Unnecessary getter" groupPath="CodeNarc,Unnecessary" groupKey="Unnecessary" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.unnecessary.UnnecessaryGStringInspectionTool" shortName="CodeNarc.UnnecessaryGString" displayName="UnnecessaryGString" groupPath="CodeNarc,Unnecessary" groupKey="Unnecessary" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.unnecessary.UnnecessaryIfStatementInspectionTool" shortName="CodeNarc.UnnecessaryIfStatement" displayName="Unnecessary if statement" groupPath="CodeNarc,Unnecessary" groupKey="Unnecessary" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.unnecessary.UnnecessaryInstanceOfCheckInspectionTool" shortName="CodeNarc.UnnecessaryInstanceOfCheck" displayName="Unnecessary instance of check" groupPath="CodeNarc,Unnecessary" groupKey="Unnecessary" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.unnecessary.UnnecessaryInstantiationToGetClassInspectionTool" shortName="CodeNarc.UnnecessaryInstantiationToGetClass" displayName="Unnecessary instantiation to get class" groupPath="CodeNarc,Unnecessary" groupKey="Unnecessary" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.unnecessary.UnnecessaryIntegerInstantiationInspectionTool" shortName="CodeNarc.UnnecessaryIntegerInstantiation" displayName="Unnecessary integer instantiation" groupPath="CodeNarc,Unnecessary" groupKey="Unnecessary" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.unnecessary.UnnecessaryLongInstantiationInspectionTool" shortName="CodeNarc.UnnecessaryLongInstantiation" displayName="Unnecessary long instantiation" groupPath="CodeNarc,Unnecessary" groupKey="Unnecessary" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.unnecessary.UnnecessaryModOneInspectionTool" shortName="CodeNarc.UnnecessaryModOne" displayName="Unnecessary mod one" groupPath="CodeNarc,Unnecessary" groupKey="Unnecessary" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.unnecessary.UnnecessaryNullCheckBeforeInstanceOfInspectionTool" shortName="CodeNarc.UnnecessaryNullCheckBeforeInstanceOf" displayName="Unnecessary null check before instance of" groupPath="CodeNarc,Unnecessary" groupKey="Unnecessary" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.unnecessary.UnnecessaryNullCheckInspectionTool" shortName="CodeNarc.UnnecessaryNullCheck" displayName="Unnecessary null check" groupPath="CodeNarc,Unnecessary" groupKey="Unnecessary" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.unnecessary.UnnecessaryObjectReferencesInspectionTool" shortName="CodeNarc.UnnecessaryObjectReferences" displayName="Unnecessary object references" groupPath="CodeNarc,Unnecessary" groupKey="Unnecessary" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.unnecessary.UnnecessaryOverridingMethodInspectionTool" shortName="CodeNarc.UnnecessaryOverridingMethod" displayName="Unnecessary overriding method" groupPath="CodeNarc,Unnecessary" groupKey="Unnecessary" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.unnecessary.UnnecessaryPackageReferenceInspectionTool" shortName="CodeNarc.UnnecessaryPackageReference" displayName="Unnecessary package reference" groupPath="CodeNarc,Unnecessary" groupKey="Unnecessary" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.unnecessary.UnnecessaryParenthesesForMethodCallWithClosureInspectionTool" shortName="CodeNarc.UnnecessaryParenthesesForMethodCallWithClosure" displayName="Unnecessary parentheses for method call with closure" groupPath="CodeNarc,Unnecessary" groupKey="Unnecessary" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.unnecessary.UnnecessaryPublicModifierInspectionTool" shortName="CodeNarc.UnnecessaryPublicModifier" displayName="Unnecessary public modifier" groupPath="CodeNarc,Unnecessary" groupKey="Unnecessary" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.unnecessary.UnnecessaryReturnKeywordInspectionTool" shortName="CodeNarc.UnnecessaryReturnKeyword" displayName="Unnecessary return keyword" groupPath="CodeNarc,Unnecessary" groupKey="Unnecessary" level="WEAK WARNING" enabledByDefault="false"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.unnecessary.UnnecessarySafeNavigationOperatorInspectionTool" shortName="CodeNarc.UnnecessarySafeNavigationOperator" displayName="Unnecessary safe navigation operator" groupPath="CodeNarc,Unnecessary" groupKey="Unnecessary" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.unnecessary.UnnecessarySelfAssignmentInspectionTool" shortName="CodeNarc.UnnecessarySelfAssignment" displayName="Unnecessary self assignment" groupPath="CodeNarc,Unnecessary" groupKey="Unnecessary" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.unnecessary.UnnecessarySemicolonInspectionTool" shortName="CodeNarc.UnnecessarySemicolon" displayName="Unnecessary semicolon" groupPath="CodeNarc,Unnecessary" groupKey="Unnecessary" level="WEAK WARNING" enabledByDefault="false"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.unnecessary.UnnecessarySetterInspectionTool" shortName="CodeNarc.UnnecessarySetter" displayName="Unnecessary setter" groupPath="CodeNarc,Unnecessary" groupKey="Unnecessary" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.unnecessary.UnnecessaryStringInstantiationInspectionTool" shortName="CodeNarc.UnnecessaryStringInstantiation" displayName="Unnecessary string instantiation" groupPath="CodeNarc,Unnecessary" groupKey="Unnecessary" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.unnecessary.UnnecessarySubstringInspectionTool" shortName="CodeNarc.UnnecessarySubstring" displayName="Unnecessary substring" groupPath="CodeNarc,Unnecessary" groupKey="Unnecessary" level="WEAK WARNING" enabledByDefault="false"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.unnecessary.UnnecessaryTernaryExpressionInspectionTool" shortName="CodeNarc.UnnecessaryTernaryExpression" displayName="Unnecessary ternary expression" groupPath="CodeNarc,Unnecessary" groupKey="Unnecessary" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.unnecessary.UnnecessaryToStringInspectionTool" shortName="CodeNarc.UnnecessaryToString" displayName="Unnecessary to string" groupPath="CodeNarc,Unnecessary" groupKey="Unnecessary" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.unnecessary.UnnecessaryTransientModifierInspectionTool" shortName="CodeNarc.UnnecessaryTransientModifier" displayName="Unnecessary transient modifier" groupPath="CodeNarc,Unnecessary" groupKey="Unnecessary" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.generic.IllegalClassMemberInspectionTool" shortName="CodeNarc.IllegalClassMember" displayName="Illegal class member" groupPath="CodeNarc,Generic" groupKey="Generic" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.generic.IllegalClassReferenceInspectionTool" shortName="CodeNarc.IllegalClassReference" displayName="Illegal class reference" groupPath="CodeNarc,Generic" groupKey="Generic" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.generic.IllegalPackageReferenceInspectionTool" shortName="CodeNarc.IllegalPackageReference" displayName="Illegal package reference" groupPath="CodeNarc,Generic" groupKey="Generic" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.generic.IllegalRegexInspectionTool" shortName="CodeNarc.IllegalRegex" displayName="Illegal regex" groupPath="CodeNarc,Generic" groupKey="Generic" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.generic.IllegalStringInspectionTool" shortName="CodeNarc.IllegalString" displayName="Illegal string" groupPath="CodeNarc,Generic" groupKey="Generic" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.generic.IllegalSubclassInspectionTool" shortName="CodeNarc.IllegalSubclass" displayName="Illegal subclass" groupPath="CodeNarc,Generic" groupKey="Generic" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.generic.RequiredRegexInspectionTool" shortName="CodeNarc.RequiredRegex" displayName="Required regex" groupPath="CodeNarc,Generic" groupKey="Generic" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.generic.RequiredStringInspectionTool" shortName="CodeNarc.RequiredString" displayName="Required string" groupPath="CodeNarc,Generic" groupKey="Generic" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.generic.StatelessClassInspectionTool" shortName="CodeNarc.StatelessClass" displayName="Stateless class" groupPath="CodeNarc,Generic" groupKey="Generic" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.braces.IfStatementBracesInspectionTool" shortName="CodeNarc.IfStatementBraces" displayName="If statement braces" groupPath="CodeNarc,Braces" groupKey="Braces" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.braces.ElseBlockBracesInspectionTool" shortName="CodeNarc.ElseBlockBraces" displayName="Else block braces" groupPath="CodeNarc,Braces" groupKey="Braces" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.braces.ForStatementBracesInspectionTool" shortName="CodeNarc.ForStatementBraces" displayName="For statement braces" groupPath="CodeNarc,Braces" groupKey="Braces" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.braces.WhileStatementBracesInspectionTool" shortName="CodeNarc.WhileStatementBraces" displayName="While statement braces" groupPath="CodeNarc,Braces" groupKey="Braces" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.grails.GrailsDomainHasEqualsInspectionTool" shortName="CodeNarc.GrailsDomainHasEquals" displayName="Grails domain has equals" groupPath="CodeNarc,Grails" groupKey="Grails" level="WARNING" enabledByDefault="false"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.grails.GrailsDomainHasToStringInspectionTool" shortName="CodeNarc.GrailsDomainHasToString" displayName="Grails domain has to string" groupPath="CodeNarc,Grails" groupKey="Grails" level="WARNING" enabledByDefault="false"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.grails.GrailsDuplicateMappingInspectionTool" shortName="CodeNarc.GrailsDuplicateMapping" displayName="Grails duplicate mapping" groupPath="CodeNarc,Grails" groupKey="Grails" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.grails.GrailsPublicControllerMethodInspectionTool" shortName="CodeNarc.GrailsPublicControllerMethod" displayName="Grails public controller method" groupPath="CodeNarc,Grails" groupKey="Grails" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.grails.GrailsServletContextReferenceInspectionTool" shortName="CodeNarc.GrailsServletContextReference" displayName="Grails servlet context reference" groupPath="CodeNarc,Grails" groupKey="Grails" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.grails.GrailsStatelessServiceInspectionTool" shortName="CodeNarc.GrailsStatelessService" displayName="Grails stateless service" groupPath="CodeNarc,Grails" groupKey="Grails" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.grails.GrailsDuplicateConstraintInspectionTool" shortName="CodeNarc.GrailsDuplicateConstraint" displayName="Grails duplicate constraint" groupPath="CodeNarc,Grails" groupKey="Grails" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.grails.GrailsDomainWithServiceReferenceInspectionTool" shortName="CodeNarc.GrailsDomainWithServiceReference" displayName="Grails domain with service reference" groupPath="CodeNarc,Grails" groupKey="Grails" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.grails.GrailsDomainReservedSqlKeywordNameInspectionTool" shortName="CodeNarc.GrailsDomainReservedSqlKeywordName" displayName="Grails domain reserved sql keyword name" groupPath="CodeNarc,Grails" groupKey="Grails" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.grails.GrailsMassAssignmentInspectionTool" shortName="CodeNarc.GrailsMassAssignment" displayName="Grails mass assignment" groupPath="CodeNarc,Grails" groupKey="Grails" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.grails.GrailsDomainStringPropertyMaxSizeInspectionTool" shortName="CodeNarc.GrailsDomainStringPropertyMaxSize" displayName="Grails domain string property max size" groupPath="CodeNarc,Grails" groupKey="Grails" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.unused.UnusedArrayInspectionTool" shortName="CodeNarc.UnusedArray" displayName="Unused array" groupPath="CodeNarc,Unused" groupKey="Unused" level="WARNING" enabledByDefault="false"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.unused.UnusedObjectInspectionTool" shortName="CodeNarc.UnusedObject" displayName="Unused object" groupPath="CodeNarc,Unused" groupKey="Unused" level="WARNING" enabledByDefault="false"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.unused.UnusedPrivateFieldInspectionTool" shortName="CodeNarc.UnusedPrivateField" displayName="Unused private field" groupPath="CodeNarc,Unused" groupKey="Unused" level="WARNING" enabledByDefault="false"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.unused.UnusedPrivateMethodParameterInspectionTool" shortName="CodeNarc.UnusedPrivateMethodParameter" displayName="Unused private method parameter" groupPath="CodeNarc,Unused" groupKey="Unused" level="WARNING" enabledByDefault="false"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.unused.UnusedPrivateMethodInspectionTool" shortName="CodeNarc.UnusedPrivateMethod" displayName="Unused private method" groupPath="CodeNarc,Unused" groupKey="Unused" level="WARNING" enabledByDefault="false"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.unused.UnusedVariableInspectionTool" shortName="CodeNarc.UnusedVariable" displayName="Unused variable" groupPath="CodeNarc,Unused" groupKey="Unused" level="WARNING" enabledByDefault="false"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.unused.UnusedMethodParameterInspectionTool" shortName="CodeNarc.UnusedMethodParameter" displayName="Unused method parameter" groupPath="CodeNarc,Unused" groupKey="Unused" level="WARNING" enabledByDefault="false"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.security.NonFinalSubclassOfSensitiveInterfaceInspectionTool" shortName="CodeNarc.NonFinalSubclassOfSensitiveInterface" displayName="Non final subclass of sensitive interface" groupPath="CodeNarc,Security" groupKey="Security" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.security.InsecureRandomInspectionTool" shortName="CodeNarc.InsecureRandom" displayName="Insecure random" groupPath="CodeNarc,Security" groupKey="Security" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.security.FileCreateTempFileInspectionTool" shortName="CodeNarc.FileCreateTempFile" displayName="File create temp file" groupPath="CodeNarc,Security" groupKey="Security" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.security.SystemExitInspectionTool" shortName="CodeNarc.SystemExit" displayName="System exit" groupPath="CodeNarc,Security" groupKey="Security" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.security.ObjectFinalizeInspectionTool" shortName="CodeNarc.ObjectFinalize" displayName="Object finalize" groupPath="CodeNarc,Security" groupKey="Security" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.security.JavaIoPackageAccessInspectionTool" shortName="CodeNarc.JavaIoPackageAccess" displayName="Java io package access" groupPath="CodeNarc,Security" groupKey="Security" level="WARNING" enabledByDefault="false"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.security.UnsafeArrayDeclarationInspectionTool" shortName="CodeNarc.UnsafeArrayDeclaration" displayName="Unsafe array declaration" groupPath="CodeNarc,Security" groupKey="Security" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.security.PublicFinalizeMethodInspectionTool" shortName="CodeNarc.PublicFinalizeMethod" displayName="Public finalize method" groupPath="CodeNarc,Security" groupKey="Security" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.security.NonFinalPublicFieldInspectionTool" shortName="CodeNarc.NonFinalPublicField" displayName="Non final public field" groupPath="CodeNarc,Security" groupKey="Security" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.comments.ClassJavadocInspectionTool" shortName="CodeNarc.ClassJavadoc" displayName="Class javadoc" groupPath="CodeNarc,Comments" groupKey="Comments" level="WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.comments.JavadocConsecutiveEmptyLinesInspectionTool" shortName="CodeNarc.JavadocConsecutiveEmptyLines" displayName="Javadoc consecutive empty lines" groupPath="CodeNarc,Comments" groupKey="Comments" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.comments.JavadocEmptyAuthorTagInspectionTool" shortName="CodeNarc.JavadocEmptyAuthorTag" displayName="Javadoc empty author tag" groupPath="CodeNarc,Comments" groupKey="Comments" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.comments.JavadocEmptyExceptionTagInspectionTool" shortName="CodeNarc.JavadocEmptyExceptionTag" displayName="Javadoc empty exception tag" groupPath="CodeNarc,Comments" groupKey="Comments" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.comments.JavadocEmptyFirstLineInspectionTool" shortName="CodeNarc.JavadocEmptyFirstLine" displayName="Javadoc empty first line" groupPath="CodeNarc,Comments" groupKey="Comments" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.comments.JavadocEmptyLastLineInspectionTool" shortName="CodeNarc.JavadocEmptyLastLine" displayName="Javadoc empty last line" groupPath="CodeNarc,Comments" groupKey="Comments" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.comments.JavadocEmptyParamTagInspectionTool" shortName="CodeNarc.JavadocEmptyParamTag" displayName="Javadoc empty param tag" groupPath="CodeNarc,Comments" groupKey="Comments" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.comments.JavadocEmptyReturnTagInspectionTool" shortName="CodeNarc.JavadocEmptyReturnTag" displayName="Javadoc empty return tag" groupPath="CodeNarc,Comments" groupKey="Comments" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.comments.JavadocEmptySeeTagInspectionTool" shortName="CodeNarc.JavadocEmptySeeTag" displayName="Javadoc empty see tag" groupPath="CodeNarc,Comments" groupKey="Comments" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.comments.JavadocEmptySinceTagInspectionTool" shortName="CodeNarc.JavadocEmptySinceTag" displayName="Javadoc empty since tag" groupPath="CodeNarc,Comments" groupKey="Comments" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.comments.JavadocEmptyThrowsTagInspectionTool" shortName="CodeNarc.JavadocEmptyThrowsTag" displayName="Javadoc empty throws tag" groupPath="CodeNarc,Comments" groupKey="Comments" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.comments.JavadocEmptyVersionTagInspectionTool" shortName="CodeNarc.JavadocEmptyVersionTag" displayName="Javadoc empty version tag" groupPath="CodeNarc,Comments" groupKey="Comments" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.comments.JavadocMissingExceptionDescriptionInspectionTool" shortName="CodeNarc.JavadocMissingExceptionDescription" displayName="Javadoc missing exception description" groupPath="CodeNarc,Comments" groupKey="Comments" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.comments.JavadocMissingParamDescriptionInspectionTool" shortName="CodeNarc.JavadocMissingParamDescription" displayName="Javadoc missing param description" groupPath="CodeNarc,Comments" groupKey="Comments" level="WEAK WARNING" enabledByDefault="true"/>
    <localInspection language="Groovy" implementationClass="org.codenarc.idea.inspections.comments.JavadocMissingThrowsDescriptionInspectionTool" shortName="CodeNarc.JavadocMissingThrowsDescription" displayName="Javadoc missing throws description" groupPath="CodeNarc,Comments" groupKey="Comments" level="WEAK WARNING" enabledByDefault="true"/>
  </extensions>
  <actions/>
</idea-plugin>
